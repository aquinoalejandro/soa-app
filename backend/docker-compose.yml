     
services: 
  postgres:
    container_name: postgres_db
    image: postgres:15.1
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - ./db_data:/var/lib/postgresql/data 
    ports:
      - 5434:5432
    restart: always
    env_file: 
      - .env
    networks:
      - my-red

  

  server:
    depends_on:
      - postgres
    build: .
    ports:
      - "3001:3000"
    restart: always
    environment:
      - DIALECT=${DB_DIALECT}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
    env_file: 
      - .env
    networks:
      - my-red

  # product manage localhost:3002
  server2:
    depends_on:
      - postgres
    build: ./src/services/product_manage
    ports:
      - "3002:3000"
    restart: always
    environment:
      - DIALECT=${DB_DIALECT}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
    env_file: 
      - .env
    networks:
      - my-red

  # review localhost:3003
  server3:
    depends_on:
      - postgres
    build: ./src/services/review_manage
    ports:
      - "3003:3000"
    restart: always
    environment:
      - DIALECT=${DB_DIALECT}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
    env_file: 
      - .env
    networks:
      - my-red

  # user localhost:3004
  server4:
    depends_on:
      - postgres
    build: ./src/services/user_manage
    ports:
      - "3004:3000"
    restart: always
    environment:
      - DIALECT=${DB_DIALECT}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
    env_file: 
      - .env
    networks:
      - my-red
  

networks:
  my-red:
    driver: bridge